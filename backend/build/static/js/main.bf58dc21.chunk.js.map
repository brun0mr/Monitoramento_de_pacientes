{"version":3,"sources":["components/home/home.js","components/About/About.js","components/Navbar/SubMenu.js","context/auth-context.js","components/Navbar/Navbar__.js","components/Login/Login.js","components/lista_pacientes/Lista_pacientes.js","components/Login/Recovery.js","components/Register/Register.js","components/Profile/Profile.js","components/lista_pacientes/Historico_paciente.js","components/Lista_medicos/Lista_medicos.js","components/Lista_sensores/Lista_sensores.js","components/Relatorios/Reports.js","components/Alerts/Alerts.js","components/Teste/Teste1.js","components/Teste/Teste_fetch.js","components/Contact/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Home","react_default","a","createElement","className","reactstrap_module","block","color","size","onClick","href","About","SubMenu","_ref","title","subs","setOp","_useState","useState","_useState2","Object","slicedToArray","isOpen","setIsOpen","items","map","x","index_esm","AuthContext","createContext","AuthProvider","children","isLoggedIn","setIsLoggedIn","Provider","value","Navbar__","pills","tabs","vertical","submenus","src","Cookies","get","Fragment","remove","set","Login","pass","setPass","_useState3","_useState4","user","setUser","_useAuth","ctx","useContext","useAuth","_useAuth2","_useState5","_useState6","submissionAns","setSubmissionAns","setTimeout","login_form_jsx","type","id","name","for","onChange","e","target","outline","fetch","method","body","JSON","stringify","password","Lista_pacientes","S_attach_p","P_attach_s","data","set_loaded_data","show_add_window","set_show_add_window","_useState7","_useState8","load_n_attached","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","response1","wrap","_context2","prev","next","token","patient","sensor","sent","json","stop","apply","this","arguments","load_data","_ref3","_callee3","response","data_a","_context3","patient_opt","p_n_attached_list","sensor_opt","s_n_attached_list","linhas_lista","dados","localStorage","setItem","unshift","Recovery","email","set_email","show_message","set_show_message","forgot_jsx","message_jsx","Register","med_paci","set_med_paci","set_nome","set_cpf","_useState9","_useState10","set_senha","_useState11","_useState12","set_conf_senha","_useState13","_useState14","_useState15","_useState16","set_telefone","_useState17","_useState18","_useState19","_useState20","set_comorbidades","_useState21","_useState22","set_nome_parente","_useState23","_useState24","set_tel_parente","_useState25","_useState26","set_email_parente","_useState27","_useState28","set_cep","_useState29","_useState30","set_endereco","_useState31","_useState32","set_especialidade","jsx_patient","pattern","rows","cols","jsx_doc","jsx_form","Profile","console","log","Historico_paciente","Lista_medicos","Lista_sensores","show_change_sensor","set_show_change_sensor","med_change_sensor","set_med_change_sensor","patient_change_sensor","set_patient_change_sensor","new_sensor","show_add_sensor","set_show_add_sensor","add_sensor_id","set_add_sensor_id","add_sensor_port","set_add_sensor_port","update_sensor","doctor","add_sensor","new_sensor_id","new_sensor_port","disabled","sensor_form","change_sensor_jsx","add_sensor_jsx","Reports","Alerts","Teste1","xs","sm","offset","order","md","Teste_fetch","print","daata","setData","_callee","_context","useEffect","setInterval","Contact","App","undefined","react_router_dom","react_router","path","element","About_About","Login_Login","Lista_pacientes_Lista_pacientes","Register_Register","Profile_Profile","getItem","Historico_paciente_Historico_paciente","Lista_medicos_Lista_medicos","Lista_sensores_Lista_sensores","Reports_Reports","Alerts_Alerts","Contact_Contact","Teste1_Teste1","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAIe,SAASA,IACtB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,0BAAiBF,EAAAC,EAAAC,cAAA,iCAEjBF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACAC,OAAK,EACLC,MAAM,UACNC,KAAK,KACLC,QAAS,GACTC,KAAK,UALL,SAUAT,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,wCAEAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACAC,OAAK,EACLC,MAAM,UACNC,KAAK,KACLC,QAAQ,GACRC,KAAK,kBALL,cAWAT,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACAC,OAAK,EACLC,MAAM,UACNC,KAAK,KACLC,QAAQ,GACRC,KAAK,2BALL,aAUAT,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACAC,OAAK,EACLC,MAAM,UACNC,KAAK,KACLC,QAAQ,GACRC,KAAK,mBALL,YAUAT,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACAC,OAAK,EACLC,MAAM,UACNC,KAAK,KACLC,QAAQ,GACRC,KAAK,eALL,iBAUAT,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACAC,OAAK,EACLC,MAAM,UACNC,KAAK,KACLC,QAAQ,GACRC,KAAK,WALL,sBAUAT,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACAC,OAAK,EACLC,MAAM,UACNC,KAAK,KACLC,QAAQ,GACRC,KAAK,cALL,aAUAT,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACAC,OAAK,EACLC,MAAM,UACNC,KAAK,KACLC,QAAQ,GACRC,KAAK,UALL,UAUAT,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACAC,OAAK,EACLC,MAAM,UACNC,KAAK,KACLC,QAAQ,GACRC,KAAK,YALL,oBCjHD,SAASC,IACtB,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+BADR,KAEMF,EAAAC,EAAAC,cAAA,gCAFN,sTAOIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gCAXR,8HAa4BF,EAAAC,EAAAC,cAAA,KAAGO,KAAK,cAAR,aAb5B,0JAeWT,EAAAC,EAAAC,cAAA,KAAGO,KAAK,eAAR,iBAfX,6JAgBsET,EAAAC,EAAAC,cAAA,qBAhBtE,uLAkBQF,EAAAC,EAAAC,cAAA,KAAGO,KAAK,WAAR,sBAlBR,yDAkB0FT,EAAAC,EAAAC,cAAA,KAAGO,KAAK,UAAR,UAlB1F,wBAqBIT,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,6BAzBR,wHA0B0GF,EAAAC,EAAAC,cAAA,KAAGO,KAAK,YAAR,WA1B1G,gCCJG,SAASE,EAATC,GAAyC,IAAtBC,EAAsBD,EAAtBC,MAAcC,GAAQF,EAAfG,MAAeH,EAARE,MAAQE,EAC1BC,oBAAS,GADiBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC/CK,EAD+CH,EAAA,GACvCI,EADuCJ,EAAA,GAGlDK,EAAQT,EAAKU,IAAI,SAACC,GACpB,OACEzB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASK,KAAMgB,EAAE,IACdA,EAAE,OAOX,OACEzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASK,KAAK,IAAID,QAAS,kBAAMc,GAAWD,KAC1CrB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,IAA0BH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,MAA1B,IAAwCb,IAE1Cb,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUiB,OAAQA,GAChBrB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAAWmB,MCxBrB,IAAMI,EAAcC,0BAEL,SAASC,EAATjB,GAAiC,IAAVkB,EAAUlB,EAAVkB,SAAUd,EACRC,qBADQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACrCe,EADqCb,EAAA,GACzBc,EADyBd,EAAA,GAG5C,OACElB,EAAAC,EAAAC,cAACyB,EAAYM,SAAb,CAAsBC,MAAO,CAAEH,aAAYC,kBACxCF,uBCAM,SAASK,IAQpB,OACEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKgC,OAAK,EAACC,MAAI,EAACC,UAAQ,GACtBtC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAaK,KAAK,IAAIN,UAAU,SAC9BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,cAEFH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASK,KAAK,KACZT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACV,IACDH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,MAFF,WAOJ1B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASK,KAAK,UACZT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACV,IACDH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,MAFF,YAOJ1B,EAAAC,EAAAC,cAACS,EAAD,CAASE,MAAM,SAASC,KAAMyB,EAAS,KAEvCvC,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASK,KAAK,eACZT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACXH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,MADF,oBAMJ1B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASK,KAAK,WACZT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACV,IACDH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,MAFF,yBAMJ1B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASK,KAAK,cACZT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACV,IACDH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,MAFF,gBAMJ1B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASK,KAAK,WACZT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACV,IACDH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,MAFF,aAMJ1B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASK,KAAK,YACZT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACV,IACDH,EAAAC,EAAAC,cAACwB,EAAA,EAAD,MAFF,eAON1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OACEsC,IAAI,2FACJrC,UAAU,aAEgB,IAA3BsC,IAAQC,IAAI,YACT,YACAD,IAAQC,IAAI,YAEY,IAA3BD,IAAQC,IAAI,aACX1C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0C,SAAA,KACE3C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQD,UAAU,oBAAoBG,MAAM,YAAYG,KAAK,mBAA7D,UAGAT,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQD,UAAU,oBAAoBG,MAAM,SAASG,KAAK,IAAID,QAzFrD,WACjBiC,IAAQG,OAAO,YACfH,IAAQG,OAAO,WACfH,IAAQI,IAAI,cAAc,GAC1BJ,IAAQG,OAAO,WAqFP,kBAUd,IAAML,EAAW,CACf,CACE,CAAC,aAAW,kBACZ,CAAC,YAAa,2BACd,CAAC,WAAY,2BC1GF,SAASO,IAAO,IAAA9B,EACHC,mBAAS,IADNC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpB+B,EADoB7B,EAAA,GACd8B,EADc9B,EAAA,GAAA+B,EAEHhC,mBAAS,IAFNiC,EAAA/B,OAAAC,EAAA,EAAAD,CAAA8B,EAAA,GAEpBE,EAFoBD,EAAA,GAEdE,EAFcF,EAAA,GAAAG,EFOxB,WACH,IAAMC,EAAMC,qBAAW5B,GAEvB,MAAO,CAD6B2B,EAA7BvB,WAA6BuB,EAAjBtB,eENKwB,GAHGC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAkC,EAAA,GAAAK,GAAAD,EAAA,GAAAA,EAAA,GAIexC,mBAAS,KAJxB0C,EAAAxC,OAAAC,EAAA,EAAAD,CAAAuC,EAAA,GAIpBE,EAJoBD,EAAA,GAILE,EAJKF,EAAA,IAoCT,UAAjBC,GAA8C,WAAjBA,IAA+BE,WAAW,WACtED,EAAiB,MAChB,KAGH,IAAIE,EACF/D,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAO8D,KAAK,QAAQC,GAAG,SAASC,KAAK,eAAehC,MAAM,WAC1DlC,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,UAAX,aACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACE8D,KAAK,QACLC,GAAG,WACHC,KAAK,eACLhC,MAAM,aAERlC,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,YAAX,YACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,QAAX,cACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO8D,KAAK,OAAOC,GAAG,OAAOG,SA9BZ,SAACC,GACpBjB,EAAQiB,EAAEC,OAAOpC,UA8BflC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,QAAX,aACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO8D,KAAK,WAAWC,GAAG,OAAOG,SA/BhB,SAACC,GACpBrB,EAAQqB,EAAEC,OAAOpC,UA+BflC,EAAAC,EAAAC,cAAA,8BACoBF,EAAAC,EAAAC,cAAA,KAAGO,KAAK,oBAAR,iBAEpBT,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,OAAK,EACLC,MAAM,UACNiE,SAAO,EACPhE,KAAK,KACLC,QAjEW,WACEgE,MAAM,mCAAoC,CACvDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACzB,KAAMA,EAAM0B,SAAU9B,MAIhDc,EAAiB,WA2DbpD,KAAK,IANP,UAUkB,UAAjBmD,GACC5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,mCAEgB,WAAjByD,GACC5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,cAKN,OACEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB4D,uCCzF3B,SAASe,IAAiB,IAMnCC,EACAC,EAPmChE,EAEAC,mBAAS,CAACgE,KAAM,KAFhB/D,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEnBkE,GAFmBhE,EAAA,GAAAA,EAAA,IAAA+B,EAGQhC,oBAAS,GAHjBiC,EAAA/B,OAAAC,EAAA,EAAAD,CAAA8B,EAAA,GAGhCkC,EAHgCjC,EAAA,GAGfkC,EAHelC,EAAA,GAAAQ,EAIazC,qBAJb0C,EAAAxC,OAAAC,EAAA,EAAAD,CAAAuC,EAAA,GAAA2B,GAAA1B,EAAA,GAAAA,EAAA,GAKa1C,sBALbqE,EAAAnE,OAAAC,EAAA,EAAAD,CAAAkE,EAAA,GAmBjCE,GAnBiCD,EAAA,GAAAA,EAAA,GAmBlB,eAAAE,EAAArE,OAAAsE,EAAA,EAAAtE,CAAAuE,EAAAzF,EAAA0F,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAzF,EAAA6F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACEzB,MAAM,uCAAwC,CACpEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACsB,MAAOzD,IAAQC,IAAI,SAAUyD,QAASnB,EAAYoB,OAAQrB,MAH5D,cAChBc,EADgBE,EAAAM,KAAAN,EAAAE,KAAA,EAKDJ,EAAUS,OALT,OAAAP,EAAAM,KAAA,wBAAAN,EAAAQ,SAAAX,MAAH,yBAAAJ,EAAAgB,MAAAC,KAAAC,YAAA,IAQfC,EAAS,eAAAC,EAAAzF,OAAAsE,EAAA,EAAAtE,CAAAuE,EAAAzF,EAAA0F,KAAG,SAAAkB,IAAA,IAAAC,EAAAC,EAAA,OAAArB,EAAAzF,EAAA6F,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACOzB,MAAM,4CADb,cACVsC,EADUE,EAAAX,KAAAW,EAAAf,KAAA,EAEKa,EAASR,OAFd,OAEVS,EAFUC,EAAAX,KAGhBnB,EAAgB,CAACD,KAAM8B,IAHP,wBAAAC,EAAAT,SAAAM,MAAH,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GAiBXO,EAAcC,EAAkB1F,IAAI,SAACC,GAAD,OACtCzB,EAAAC,EAAAC,cAAA,UAAQgC,MAAOT,GAAIA,KAEjB0F,EAAaC,EAAkB5F,IAAI,SAACC,GAAD,OACrCzB,EAAAC,EAAAC,cAAA,UAAQgC,MAAOT,GAAIA,KAInB4F,EAAeC,EAAM9F,IAAI,SAACC,GAAD,OAC3BzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASsB,EAAE,IAEhB,QAARA,EAAE,IACFzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZsB,EAAE,IAMG,QAARA,EAAE,IACFzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGO,KAAK,sBAAsBD,QAAS,WAAO+G,aAAaC,QAAQ,aAAc/F,EAAE,MAAOA,EAAE,KAMhGzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASsB,EAAE,IAC1BzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASsB,EAAE,IAC1BzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASsB,EAAE,IAC1BzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASsB,EAAE,OAI9B,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEE,MAAM,UACNC,KAAK,KACLC,QAAS,WACP4E,GAAoB,KAJxB,aAWApF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQE,MAAM,QAAQC,KAAK,KAAKC,QAASmG,GAAzC,eAOJ3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAekH,GAEV,GAAnBlC,GACCnF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0C,SAAA,KACE3C,EAAAC,EAAAC,cAAA,OACEC,UAAU,sBACVK,QAAS,kBAAM4E,GAAqBD,MAEtCnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,cAAX,aACAnE,EAAAC,EAAAC,cAAA,UAAQgE,KAAK,aAAaE,SAAU,SAACC,GAAQW,EAAaX,EAAEC,OAAOpC,QAAW+E,EAAYQ,QAAQzH,EAAAC,EAAAC,cAAA,UAAQgC,MAAM,IAAd,gBAA0C+E,IAE9IjH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,cAAX,iBACAnE,EAAAC,EAAAC,cAAA,UAAQgE,KAAK,aAAaE,SAAU,SAACC,GAAQU,EAAaV,EAAEC,OAAOpC,QAAWiF,EAAWM,QAAQzH,EAAAC,EAAAC,cAAA,UAAQgC,MAAM,IAAd,gBAA0CiF,IAE7InH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,gBACVG,MAAM,UACNC,KAAK,KACLE,KAAK,0BACLD,QAAS+E,GALX,kBAkBd,IAAI+B,EAAQ,CACR,CAAC,KAAM,OAAQ,QAAM,MAAO,OAAQ,QACpC,CAAC,EAAG,WAAY,GAAI,IAAK,IAAK,KAC9B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,KAC3B,CAAC,EAAG,QAAS,GAAI,IAAK,IAAK,MAG3BJ,EAAoB,CACtB,cAAe,WAAY,cAAe,eAGxCE,EAAoB,CACtB,EAAE,EAAE,EAAE,EAAE,kBC3KK,SAASM,IAAU,IAAA1G,EACHC,mBAAS,IADNC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvB2G,EADuBzG,EAAA,GAChB0G,EADgB1G,EAAA,GAAA+B,EAEWhC,oBAAS,GAFpBiC,EAAA/B,OAAAC,EAAA,EAAAD,CAAA8B,EAAA,GAEvB4E,EAFuB3E,EAAA,GAET4E,EAFS5E,EAAA,GAW1B6E,EACA/H,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,SAAX,sBACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO8D,KAAK,QAAQC,GAAG,QAAQG,SAAU,SAAC3C,GAAD,OAAOmG,EAAUnG,EAAE6C,OAAOpC,UACnElC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,OAAK,EAACC,MAAM,UAAUiE,SAAO,EAAChE,KAAK,KAAKyD,KAAK,SAASxD,QAAS,kBAAMsH,GAAkBD,KAA/F,cAMAG,EACFhI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,uBAAsDwH,GAGxD,OACE3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiC,GAAhB0H,GAAyBE,GACzD/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiC,GAAhB0H,GAAwBG,WChCrD,SAASC,IAAW,IAAAjH,EACSC,mBAAS,IADlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAAiC,GAAA/B,EAAA,GAAAA,EAAA,GAGAD,mBAAS,KAHTiC,EAAA/B,OAAAC,EAAA,EAAAD,CAAA8B,EAAA,GAG1BiF,EAH0BhF,EAAA,GAGhBiF,EAHgBjF,EAAA,GAAAQ,EAIRzC,mBAAS,IAJD0C,EAAAxC,OAAAC,EAAA,EAAAD,CAAAuC,EAAA,GAIpB0E,GAJoBzE,EAAA,GAAAA,EAAA,IAAA0B,EAKVpE,mBAAS,IALCqE,EAAAnE,OAAAC,EAAA,EAAAD,CAAAkE,EAAA,GAKrBgD,GALqB/C,EAAA,GAAAA,EAAA,IAAAgD,EAMNrH,mBAAS,IANHsH,EAAApH,OAAAC,EAAA,EAAAD,CAAAmH,EAAA,GAMnBE,GANmBD,EAAA,GAAAA,EAAA,IAAAE,EAOIxH,mBAAS,IAPbyH,EAAAvH,OAAAC,EAAA,EAAAD,CAAAsH,EAAA,GAOdE,GAPcD,EAAA,GAAAA,EAAA,IAAAE,EAQR3H,mBAAS,IARD4H,EAAA1H,OAAAC,EAAA,EAAAD,CAAAyH,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GASA5H,mBAAS,KATT8H,EAAA5H,OAAAC,EAAA,EAAAD,CAAA2H,EAAA,GAShBE,GATgBD,EAAA,GAAAA,EAAA,IAAAE,EAUNhI,mBAAS,IAVHiI,EAAA/H,OAAAC,EAAA,EAAAD,CAAA8H,EAAA,GAUnBrB,GAVmBsB,EAAA,GAAAA,EAAA,IAAAC,EAWQlI,mBAAS,IAXjBmI,EAAAjI,OAAAC,EAAA,EAAAD,CAAAgI,EAAA,GAWZE,GAXYD,EAAA,GAAAA,EAAA,IAAAE,EAYQrI,mBAAS,IAZjBsI,EAAApI,OAAAC,EAAA,EAAAD,CAAAmI,EAAA,GAYZE,GAZYD,EAAA,GAAAA,EAAA,IAAAE,EAaMxI,mBAAS,IAbfyI,EAAAvI,OAAAC,EAAA,EAAAD,CAAAsI,EAAA,GAabE,GAbaD,EAAA,GAAAA,EAAA,IAAAE,EAcU3I,mBAAS,IAdnB4I,EAAA1I,OAAAC,EAAA,EAAAD,CAAAyI,EAAA,GAcXE,GAdWD,EAAA,GAAAA,EAAA,IAAAE,EAeV9I,mBAAS,IAfC+I,EAAA7I,OAAAC,EAAA,EAAAD,CAAA4I,EAAA,GAerBE,GAfqBD,EAAA,GAAAA,EAAA,IAAAE,EAgBAjJ,mBAAS,IAhBTkJ,EAAAhJ,OAAAC,EAAA,EAAAD,CAAA+I,EAAA,GAgBhBE,GAhBgBD,EAAA,GAAAA,EAAA,IAAAE,EAiBUpJ,mBAAS,IAjBnBqJ,EAAAnJ,OAAAC,EAAA,EAAAD,CAAAkJ,EAAA,GAiBXE,GAjBWD,EAAA,GAAAA,EAAA,IAyC3BE,EACJxK,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0C,SAAA,KACE3C,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,aAAX,uBACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO8D,KAAK,OAAOC,GAAG,YAAYG,SAAU,SAACC,GAAOmF,EAAiBnF,EAAEC,OAAOpC,UAC9ElC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,kBAAX,2BACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACE8D,KAAK,MACLC,GAAG,iBACHwG,QAAQ,6BACRrG,SAAU,SAACC,GAAOsF,EAAgBtF,EAAEC,OAAOpC,UAE7ClC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,cAAX,wBACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO8D,KAAK,QAAQC,GAAG,aAAaG,SAAU,SAACC,GAAOyF,EAAkBzF,EAAEC,OAAOpC,UACjFlC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,eAAX,sCACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAAU+D,GAAG,cAAcyG,KAAK,IAAIC,KAAK,KAAKvG,SAAU,SAACC,GAAOgF,EAAiBhF,EAAEC,OAAOpC,UAC1FlC,EAAAC,EAAAC,cAAA,YAIE0K,EACJ5K,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0C,SAAA,KACE3C,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,iBAAX,kBACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO8D,KAAK,OAAOC,GAAG,gBAAgBG,SAAU,SAACC,GAAOkG,EAAkBlG,EAAEC,OAAOpC,UACnFlC,EAAAC,EAAAC,cAAA,YAIE2K,EACJ7K,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0C,SAAA,KACE3C,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SACE8D,KAAK,QACLC,GAAG,SACHC,KAAK,eACLhC,MAAM,SACNkC,SAAU,SAACC,GAAD,OAAO8D,EAAa,aAEhCnI,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,UAAX,aACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACE8D,KAAK,QACLC,GAAG,WACHC,KAAK,eACLE,SAAU,SAACC,GAAD,OAAO8D,EAAa,eAEhCnI,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,YAAX,YACAnE,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,QAAX,SACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACE8D,KAAK,OACLC,GAAG,OACHG,SAAU,SAACC,GACT+D,EAAS/D,EAAEC,OAAOpC,UAGtBlC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,OAAX,QACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACE8D,KAAK,OACLC,GAAG,MACHG,SAAU,SAACC,GACTgE,EAAQhE,EAAEC,OAAOpC,UAGrBlC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,QAAX,UACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACE8D,KAAK,WACLC,GAAG,OACHG,SAAU,SAACC,GACTmE,EAAUnE,EAAEC,OAAOpC,UAGvBlC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,aAAX,uBACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACE8D,KAAK,WACLC,GAAG,YACHG,SAAU,SAACC,GACTsE,EAAetE,EAAEC,OAAOpC,UAG5BlC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,aAAX,qBACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACE8D,KAAK,MACLC,GAAG,YACHwG,QAAQ,6BACRrG,SAAU,SAACC,GACT2E,EAAa3E,EAAEC,OAAOpC,UAG1BlC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,SAAX,kBACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACE8D,KAAK,QACLC,GAAG,QACHG,SAAU,SAACC,GACTuD,EAAUvD,EAAEC,OAAOpC,UAGvBlC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,OAAX,QACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACE8D,KAAK,OACLC,GAAG,MACHG,SAAU,SAACC,GACT4F,EAAQ5F,EAAEC,OAAOpC,UAGrBlC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,WAAX,gBACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACE8D,KAAK,OACLC,GAAG,UACHG,SAAU,SAACC,GACT+F,EAAa/F,EAAEC,OAAOpC,UAG1BlC,EAAAC,EAAAC,cAAA,WAEa,YAAZgI,GAA0BsC,EACd,UAAZtC,GAAwB0C,EAEzB5K,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,SAAX,mBACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO8D,KAAK,OAAOC,GAAG,UACtBjE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,OAAK,EACLC,MAAM,UACNiE,SAAO,EACPhE,KAAK,KACLC,QAnLS,WACfgE,MAAM,sCAAuC,CAC3CC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,MAGNJ,MAAM,2CA8KjB/D,KAAK,IANP,eAcN,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY0K,UCpNlB,SAASC,EAATlK,GAAsB,IAAJqD,EAAIrD,EAAJqD,GACZO,MAAM,qCAAsC,CACzDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACX,GAAIA,EAAIiC,MAAOzD,IAAQC,IAAI,aA8BrD,OACE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,cACVqC,IAAI,8FAGRxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,QAAX,SACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO8D,KAAK,OAAOC,GAAG,OAAO/B,MAAO,KACpClC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,QAAX,UACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO8D,KAAK,WAAWC,GAAG,SAC1BjE,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,aAAX,uBACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO8D,KAAK,WAAWC,GAAG,cAC1BjE,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,QAAQjC,MAAO,IAA1B,UACAlC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO8D,KAAK,QAAQC,GAAG,UACvBjE,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,YAAYjC,MAAO,IAA9B,aACAlC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACE8D,KAAK,MACLC,GAAG,YACHwG,QAAQ,+BAEVzK,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,SAAX,UACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO8D,KAAK,QAAQC,GAAG,UACvBjE,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,cAAcjC,MAAO,IAAhC,iBACAlC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAAU+D,GAAG,cAAcyG,KAAK,IAAIC,KAAK,OACzC3K,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,SAAX,mBACAnE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAO8D,KAAK,OAAOC,GAAG,UACtBjE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,OAAK,EACLC,MAAM,UACNiE,SAAO,EACPhE,KAAK,KACLC,QAjEK,WACbuK,QAAQC,IAAI,KAiEJvK,KAAK,IANP,uBC1FC,SAASwK,EAATrK,GAAiC,IAAJqD,EAAIrD,EAAJqD,GAAIjD,EAELC,mBAAS,CAACgE,KAAM,KAFX/D,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAmCxCqG,GAnCwCnG,EAAA,GAAAA,EAAA,GAmCzBoG,EAAM9F,IAAI,SAACC,GAAD,OACzBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASsB,EAAE,IAEhB,QAARA,EAAE,IACFzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZsB,EAAE,IAKG,QAARA,EAAE,IACFzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,WAAMuB,EAAE,KAIZzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASsB,EAAE,IAC1BzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASsB,EAAE,IAC1BzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASsB,EAAE,IAC1BzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASsB,EAAE,QAM9B,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,YAJO,mBAKPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEE,MAAM,SACNC,KAAK,KACLC,QA/Da,WACFgE,MAAM,+CAAgD,CACnEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACX,GAAIA,EAAIiC,MAAOzD,IAAQC,IAAI,aAE7B4D,QA2DlB7F,KAAK,2BAJP,WAQAT,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQE,MAAM,OAAOC,KAAK,MAA1B,uBAIFP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBkH,IAK7C,IAAIC,EAAQ,CACR,CAAC,OAAQ,OAAQ,QAAM,MAAO,OAAQ,QACtC,CAAC,aAAc,WAAY,GAAI,IAAK,IAAK,KACzC,CAAC,aAAc,WAAY,GAAI,IAAK,IAAK,KACzC,CAAC,aAAc,WAAY,GAAI,IAAK,IAAK,KACzC,CAAC,aAAc,WAAY,GAAI,IAAK,IAAK,KACzC,CAAC,aAAc,WAAY,GAAI,IAAK,IAAK,KACzC,CAAC,aAAc,WAAY,GAAI,IAAK,IAAK,KACzC,CAAC,aAAc,WAAY,GAAI,IAAK,IAAK,KACzC,CAAC,aAAc,WAAY,GAAI,IAAK,IAAK,KACzC,CAAC,aAAc,WAAY,GAAI,IAAK,IAAK,mBC5F9B,SAAS4D,IAAe,IAAAlK,EACIC,mBAAS,CAACgE,KAAM,KADpB/D,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAUjCqG,GAViCnG,EAAA,GAAAA,EAAA,GAUlBoG,EAAM9F,IAAI,SAACC,GAAD,OAC3BzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,cACVqC,IAAI,qFAGRxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQsB,EAAE,IACzBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQsB,EAAE,IAEzBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQsB,EAAE,IACzBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQE,MAAM,UAAUC,KAAK,MAA7B,QAGAP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQE,MAAM,SAASC,KAAK,MAA5B,SAGAP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQE,MAAM,UAAUC,KAAK,MAA7B,kBAON,OACEP,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0C,SAAA,KACE3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,iCACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBkH,KAM9C,IAAIC,EAAQ,CACR,CAAC,IAAK,eAAgB,qBAAsB,qBAC5C,CAAC,IAAK,eAAgB,qBAAsB,qBAC5C,CAAC,IAAK,eAAgB,qBAAsB,qBAC5C,CAAC,IAAK,eAAgB,qBAAsB,qBAC5C,CAAC,IAAK,eAAgB,qBAAsB,qBAC5C,CAAC,IAAK,eAAgB,qBAAsB,qBAC5C,CAAC,IAAK,eAAgB,qBAAsB,qBAC5C,CAAC,IAAK,eAAgB,qBAAsB,oCCrDnC,SAAS6D,IAAiB,IAAAnK,EACAC,mBAAS,CAAEgE,KAAM,KADjB/D,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAAiC,GAAA/B,EAAA,GAAAA,EAAA,GAEcD,oBAAS,IAFvBiC,EAAA/B,OAAAC,EAAA,EAAAD,CAAA8B,EAAA,GAEhCmI,EAFgClI,EAAA,GAEZmI,EAFYnI,EAAA,GAAAQ,EAGYzC,oBAAU,GAHtB0C,EAAAxC,OAAAC,EAAA,EAAAD,CAAAuC,EAAA,GAGhC4H,EAHgC3H,EAAA,GAGb4H,EAHa5H,EAAA,GAAA0B,EAIoBpE,oBAAU,GAJ9BqE,EAAAnE,OAAAC,EAAA,EAAAD,CAAAkE,EAAA,GAIhCmG,EAJgClG,EAAA,GAITmG,EAJSnG,EAAA,GAKnCoG,GAAc,EALqBpD,EAOQrH,oBAAS,GAPjBsH,EAAApH,OAAAC,EAAA,EAAAD,CAAAmH,EAAA,GAOhCqD,EAPgCpD,EAAA,GAOfqD,EAPerD,EAAA,GAAAE,EAQIxH,mBAAS,IARbyH,EAAAvH,OAAAC,EAAA,EAAAD,CAAAsH,EAAA,GAQhCoD,EARgCnD,EAAA,GAQjBoD,EARiBpD,EAAA,GAAAE,EASQ3H,mBAAS,IATjB4H,EAAA1H,OAAAC,EAAA,EAAAD,CAAAyH,EAAA,GAShCmD,EATgClD,EAAA,GASfmD,EATenD,EAAA,GAmBjCoD,EAAa,eAAAzG,EAAArE,OAAAsE,EAAA,EAAAtE,CAAAuE,EAAAzF,EAAA0F,KAAG,SAAAC,IAAA,IAAAkB,EAAA,OAAApB,EAAAzF,EAAA6F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGzB,MAAM,uCAAwC,CACjEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACsB,MAAOzD,IAAQC,IAAI,SAAUgJ,WAAYA,EAAYQ,OAAQZ,EAAmBnF,QAASqF,MAH/F,cACd1E,EADcf,EAAAM,KAAAN,EAAAE,KAAA,EAKCa,EAASR,OALV,OAAAP,EAAAM,KAAA,wBAAAN,EAAAQ,SAAAX,MAAH,yBAAAJ,EAAAgB,MAAAC,KAAAC,YAAA,GASbyF,EAAU,eAAAvF,EAAAzF,OAAAsE,EAAA,EAAAtE,CAAAuE,EAAAzF,EAAA0F,KAAG,SAAAkB,IAAA,IAAAC,EAAA,OAAApB,EAAAzF,EAAA6F,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACMzB,MAAM,uCAAwC,CACjEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACsB,MAAOzD,IAAQC,IAAI,SAAU0J,cAAeP,EAAeQ,gBAAiBN,MAHrF,cACXjF,EADWE,EAAAX,KAAAW,EAAAf,KAAA,EAKIa,EAASR,OALb,OAAAU,EAAAX,KAAA,wBAAAW,EAAAT,SAAAM,MAAH,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GASZW,EAAeC,EAAM9F,IAAI,SAACC,GAAD,OAC3BzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQsB,EAAE,IACzBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQsB,EAAE,IACzBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQsB,EAAE,IAEzBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQsB,EAAE,IACzBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQsB,EAAE,IAEzBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACJ,gBAARsB,EAAE,IACDzB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEE,MAAM,UACNC,KAAK,KACL+L,SAAUlB,EACV5K,QAAS,WACP6K,GAAuB,GACvBE,EAAsB9J,EAAE,IACxBgK,EAA0BhK,EAAE,MAPhC,UAaO,gBAARA,EAAE,IAAqB,oBAM1B8K,EAAcnG,EAAO5E,IAAI,SAACC,GAAD,OAC3BzB,EAAAC,EAAAC,cAAA,UAAQgC,MAAOT,GAAIA,KAIjB+K,EACFxM,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0C,SAAA,KACE3C,EAAAC,EAAAC,cAAA,OACEC,UAAU,oBACVK,QAAS,kBAAM6K,GAAwBD,MAEzCpL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,eAAX,sBACAnE,EAAAC,EAAAC,cAAA,UACEgE,KAAK,cACLE,SAAU,SAACC,GACTqH,EAAarH,EAAEC,OAAOpC,QAGvBqK,EAAY9E,QAAQzH,EAAAC,EAAAC,cAAA,UAAQgC,MAAM,IAAd,gBACnBqK,GAEJvM,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,gBACVG,MAAM,UACNC,KAAK,KACLE,KAAK,kBACLD,QAASyL,GALX,eAeJQ,EACFzM,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0C,SAAA,KACE3C,EAAAC,EAAAC,cAAA,OACEC,UAAU,oBACVK,QAAS,kBAAMoL,GAAoB,MAErC5L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,aAAX,iBACAnE,EAAAC,EAAAC,cAAA,SAAO+D,GAAG,YAAYD,KAAK,OAAOI,SAAU,SAACC,GAAD,OAAOyH,EAAkBzH,EAAEC,OAAOpC,UAC9ElC,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SAAOiE,IAAI,SAAX,oBACAnE,EAAAC,EAAAC,cAAA,SAAO+D,GAAG,QAAQD,KAAK,OAAOI,SAAU,SAACC,GAAD,OAAO2H,EAAoB3H,EAAEC,OAAOpC,UAC5ElC,EAAAC,EAAAC,cAAA,YAGFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,gBACVG,MAAM,UACNC,KAAK,KACLE,KAAK,kBACLD,QAAS2L,GALX,iBAeV,OACEnM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,+BAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAEbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEE,MAAM,UACNC,KAAK,KACLC,QAAS,WACPoL,GAAoB,KAJxB,cAYF5L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0BkH,GAElB,GAAtB+D,GAA8BoB,EAEX,GAAnBb,GAA2Bc,GAOlC,IAAIrG,EAAS,CACT,EAAE,EAAE,EAAE,EAAE,MAKRkB,EAAQ,CACV,CAAC,eAAa,iBAAe,cAAe,gBAAiB,aAC7D,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,KACvC,CAAC,IAAK,eAAgB,IAAK,WAAY,aCzM1B,SAASoF,IACpB,IAAIrF,EAAeC,EAAM9F,IAAI,SAACC,GAAD,OAC3BzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASsB,EAAE,IAC1BzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASsB,EAAE,IAC1BzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASsB,EAAE,IACjB,QAARA,EAAE,IAAgBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASsB,EAAE,IAEpC,QAARA,EAAE,IACDzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGO,KAAMgB,EAAE,IACTzB,EAAAC,EAAAC,cAAA,OACEC,UAAU,kBACVqC,IAAI,8IAQhB,OACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,WAAMmH,KAMhB,IAAIC,EAAQ,CACR,CAAC,OAAQ,OAAQ,YAAU,YAC3B,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,KACpC,CAAC,aAAc,WAAY,QAAS,aCpDzB,SAASqF,IACpB,OACE3M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sDCJL,SAAS0M,IACpB,OACE5M,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWD,UAAU,OACnBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKD,UAAU,mBAAf,SAEFH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKD,UAAU,mBAAf,QACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKD,UAAU,mBAAf,QACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKD,UAAU,mBAAf,QACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKD,UAAU,mBAAf,SAEFH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKD,UAAU,kBAAkB0M,GAAG,KAApC,UAGA7M,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKD,UAAU,kBAAkB0M,GAAG,QAApC,sCAGA7M,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKD,UAAU,kBAAkB0M,GAAG,KAApC,WAIF7M,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKD,UAAU,kBAAkB0M,GAAG,KAApC,UAGA7M,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKD,UAAU,kBAAkB0M,GAAG,KAApC,WAIF7M,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKD,UAAU,kBAAkB2M,GAAG,IAAID,GAAG,KAA3C,oBAGA7M,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKD,UAAU,kBAAkB2M,GAAG,IAAID,GAAG,KAA3C,oBAGA7M,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKD,UAAU,kBAAkB2M,GAAG,KAApC,cAIF9M,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,kBACV2M,GAAI,CACFC,OAAQ,EACRC,MAAO,EACPzM,KAAM,IALV,uCAWFP,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,kBACV8M,GAAI,CACFF,OAAQ,EACRxM,KAAM,GAERuM,GAAG,MANL,sCAWF9M,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,kBACV2M,GAAI,CACFC,OAAQ,EACRxM,KAAM,SAJV,6BASAP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACED,UAAU,kBACV2M,GAAI,CACFC,OAAQ,EACRxM,KAAM,SAJV,+BC9EK,SAAS2M,IAAa,IAE7BC,EAF6BnM,EACRC,mBAAS,IADDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC1BoM,EAD0BlM,EAAA,GACnBmM,EADmBnM,EAAA,GAI3ByF,EAAS,eAAA/F,EAAAO,OAAAsE,EAAA,EAAAtE,CAAAuE,EAAAzF,EAAA0F,KAAG,SAAA2H,IAAA,IAAAxG,EAAA7B,EAAA,OAAAS,EAAAzF,EAAA6F,KAAA,SAAAyH,GAAA,cAAAA,EAAAvH,KAAAuH,EAAAtH,MAAA,cAAAsH,EAAAtH,KAAA,EACSzB,MAAM,2CAA4C,CACrEC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,MAHX,cACRkC,EADQyG,EAAAlH,KAAAkH,EAAAtH,KAAA,EAKKa,EAASR,OALd,OAKRrB,EALQsI,EAAAlH,KAMdgH,EAAQpI,GANM,wBAAAsI,EAAAhH,SAAA+G,MAAH,yBAAA1M,EAAA4F,MAAAC,KAAAC,YAAA,GAuBf,OANA8G,oBAAU,WALNC,YAAY,WACR9G,KACD,MAKJ,IAEHwG,EAAQC,EAAK,IAGXpN,EAAAC,EAAAC,cAAA,WACGiN,UC5BM,SAASO,IACtB,OACE1N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,8CADR,kCAGIF,EAAAC,EAAAC,cAAA,WAHJ,uDAKIF,EAAAC,EAAAC,cAAA,WALJ,+CAOIF,EAAAC,EAAAC,cAAA,WAPJ,4CASIF,EAAAC,EAAAC,cAAA,WATJ,gDCgBG,SAASyN,IAStB,YAP8BC,GAA3BnL,IAAQC,IAAI,cACbD,IAAQI,IAAI,WAAY,SACxBJ,IAAQI,IAAI,UAAW,IACvBJ,IAAQI,IAAI,cAAc,GAC1BJ,IAAQI,IAAI,QAAS,KAIrB7C,EAAAC,EAAAC,cAAC2B,EAAD,KACE7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,KACE7N,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,KACE9N,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAOC,KAAK,IAAIC,QAAS,CAAChO,EAAAC,EAAAC,cAACH,EAAD,MAAUC,EAAAC,EAAAC,cAACiC,EAAD,SACpCnC,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAOC,KAAK,SAASC,QAAS,CAAChO,EAAAC,EAAAC,cAAC+N,EAAD,MAAWjO,EAAAC,EAAAC,cAACiC,EAAD,SAC1CnC,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAOC,KAAK,SAASC,QAAS,CAAChO,EAAAC,EAAAC,cAACgO,EAAD,MAAWlO,EAAAC,EAAAC,cAACiC,EAAD,SAC1CnC,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACEC,KAAK,mBACLC,QAAS,CAAChO,EAAAC,EAAAC,cAACwH,EAAD,MAAc1H,EAAAC,EAAAC,cAACiC,EAAD,SAE1BnC,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACEC,KAAK,0BACLC,QAAS,CAAChO,EAAAC,EAAAC,cAACiO,EAAD,MAAqBnO,EAAAC,EAAAC,cAACiC,EAAD,SAEjCnC,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACEC,KAAK,aACLC,QAAS,CAAChO,EAAAC,EAAAC,cAACkO,EAAD,MAAcpO,EAAAC,EAAAC,cAACiC,EAAD,SAE1BnC,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACEC,KAAK,kBACLC,QAAS,CACPhO,EAAAC,EAAAC,cAACmO,EAAD,CAASpK,GAAIsD,aAAa+G,QAAQ,gBAClCtO,EAAAC,EAAAC,cAACiC,EAAD,SAGJnC,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACEC,KAAK,sBACLC,QAAS,CACPhO,EAAAC,EAAAC,cAACqO,EAAD,CAAoBtK,GAAIsD,aAAa+G,QAAQ,gBAC7CtO,EAAAC,EAAAC,cAACiC,EAAD,SAGJnC,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACEC,KAAK,iBACLC,QAAS,CACPhO,EAAAC,EAAAC,cAACsO,EAAD,MACAxO,EAAAC,EAAAC,cAACiC,EAAD,SAGJnC,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACEC,KAAK,kBACLC,QAAS,CACPhO,EAAAC,EAAAC,cAACuO,EAAD,MACAzO,EAAAC,EAAAC,cAACiC,EAAD,SAGJnC,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACEC,KAAK,cACLC,QAAS,CACPhO,EAAAC,EAAAC,cAACwO,EAAD,MACA1O,EAAAC,EAAAC,cAACiC,EAAD,SAGJnC,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAOC,KAAK,UAAUC,QAAS,CAAChO,EAAAC,EAAAC,cAACyO,EAAD,MAAY3O,EAAAC,EAAAC,cAACiC,EAAD,SAC5CnC,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAOC,KAAK,WAAWC,QAAS,CAAChO,EAAAC,EAAAC,cAAC0O,EAAD,MAAa5O,EAAAC,EAAAC,cAACiC,EAAD,SAC9CnC,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAOC,KAAK,UAAUC,QAAS,CAAChO,EAAAC,EAAAC,cAAC2O,EAAD,SAChC7O,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAOC,KAAK,SAASC,QAAS,CAAChO,EAAAC,EAAAC,cAACgN,EAAD,aC3F3C,IAYe4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA5K,EAAA,GAAA6K,KAAAD,EAAAE,KAAA,WAAqBD,KAAK,SAAAtO,GAAiD,IAA9CwO,EAA8CxO,EAA9CwO,OAAQC,EAAsCzO,EAAtCyO,OAAQC,EAA8B1O,EAA9B0O,OAAQC,EAAsB3O,EAAtB2O,OAAQC,EAAc5O,EAAd4O,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,aCAdU,IAASC,OACP1P,EAAAC,EAAAC,cAACF,EAAAC,EAAM0P,WAAP,KACE3P,EAAAC,EAAAC,cAACyN,EAAD,OAEFiC,SAASC,eAAe,SAM1Bf","file":"static/js/main.bf58dc21.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./home.css\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"home_container\">\r\n        <div className=\"home_text\">\r\n            <p>\r\n                <h1>Bem vindo ao <strong>(Nome do site)</strong></h1>\r\n                \r\n                <h7>Para informações: </h7>\r\n                <Button\r\n                block\r\n                color=\"primary\"\r\n                size=\"sm\"\r\n                onClick= \"\"\r\n                href=\"/About\"\r\n                >\r\n                About\r\n                </Button>\r\n\r\n                <h5></h5>\r\n\r\n                <h7>Para lista de médicos: </h7>\r\n                \r\n                <Button\r\n                block\r\n                color=\"primary\"\r\n                size=\"sm\"\r\n                onClick=\"\"\r\n                href=\"/lista_medicos\"\r\n                >\r\n                Médicos\r\n                </Button>\r\n                \r\n\r\n                <h5></h5>\r\n\r\n                <h7>Para lista de pacientes: </h7>\r\n                <Button\r\n                block\r\n                color=\"primary\"\r\n                size=\"sm\"\r\n                onClick=\"\"\r\n                href=\"/medico/lista_pacientes\"\r\n                >\r\n                Pacientes\r\n                </Button>\r\n\r\n                <h5></h5>\r\n\r\n                <h7>Para lista de sensores: </h7>\r\n                <Button\r\n                block\r\n                color=\"primary\"\r\n                size=\"sm\"\r\n                onClick=\"\"\r\n                href=\"/lista_sensores\"\r\n                >\r\n                Sensores\r\n                </Button>\r\n\r\n                <h5></h5>\r\n\r\n                <h7>Para ver relatórios: </h7>\r\n                <Button\r\n                block\r\n                color=\"primary\"\r\n                size=\"sm\"\r\n                onClick=\"\"\r\n                href=\"/relatorios\"\r\n                >\r\n                Relatórios\r\n                </Button>\r\n\r\n                <h5></h5>\r\n\r\n                <h7>Para notificações: </h7>\r\n                <Button\r\n                block\r\n                color=\"primary\"\r\n                size=\"sm\"\r\n                onClick=\"\"\r\n                href=\"/Alerts\"\r\n                >\r\n                Notificações\r\n                </Button>\r\n\r\n                <h5></h5>\r\n\r\n                <h7>Para se cadastrar: </h7>\r\n                <Button\r\n                block\r\n                color=\"primary\"\r\n                size=\"sm\"\r\n                onClick=\"\"\r\n                href=\"/cadastrar\"\r\n                >\r\n                Cadastrar\r\n                </Button>\r\n\r\n                <h5></h5>\r\n\r\n                <h7>Para efetuar Login: </h7>\r\n                <Button\r\n                block\r\n                color=\"primary\"\r\n                size=\"sm\"\r\n                onClick=\"\"\r\n                href=\"/login\"\r\n                >\r\n                Entrar\r\n                </Button>\r\n\r\n                <h5></h5>\r\n\r\n                <h7>Para contato dos desnvolvedores: </h7>\r\n                <Button\r\n                block\r\n                color=\"primary\"\r\n                size=\"sm\"\r\n                onClick=\"\"\r\n                href=\"/Contact\"\r\n                >\r\n                Contact\r\n                </Button>\r\n            </p> \r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./About.css\";\r\n//mport Arduino from 'https://circuitdigest.com/sites/default/files/projectimage_mic/IoT-based-Patient-Monitoring-System-using-ESP8266-and-Arduino.jpg'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className=\"about_container\">\r\n        <div className=\"about_text\">\r\n            <p>\r\n                <h2><strong>Sobre o site</strong></h2>\r\n                O <strong>(Nome do site)</strong> é um software projetado para\r\n                o monitoramento remoto dos sinais biológicos de pacientes. Isso é feito\r\n                atráves da plataforma Arduino, na qual é feita a captura da temperatura, pressão,\r\n                oxigenação e frequência cardíaca através de sensores conectados diretamente nos pacientes.\r\n\r\n                <h1></h1>\r\n                <h1></h1>\r\n                <h1></h1>\r\n\r\n                <h2><strong>Funcionamento</strong></h2>\r\n                O cadastro de um paciente é feito pelo médico, o qual deve possuir um cadastro. Os cadastros\r\n                podem ser feitos na aba <a href=\"/cadastrar\">Cadastrar</a>. Os sianis biológicos\r\n                do paciente são medidos de 1 em 1 minuto e, com esses dados, são gerados relátorios que ficam disponíveis\r\n                na aba <a href=\"/relatorios\">Relatórios</a>, a qual lista os relátorios e indica a data e a hora da leitura e o médico\r\n                que supervisiona o paciente. Os relatórios ficam disponíveis para <i>download</i> apenas para o médico responsável pelo\r\n                paciente e para o próprio paciente. Caso o paciente apresenta algum sinal biológico fora do comum, um alerta é emitido na \r\n                aba <a href=\"/alerts\">Notificações</a>. Caso você já seja cadastrado, basta ir na aba <a href=\"/login\">Entrar</a> e \r\n                efetuar seu Login.\r\n\r\n                <h1></h1>\r\n                <h1></h1>\r\n                <h1></h1>\r\n\r\n                <h2><strong>Dúvidas</strong></h2>\r\n                Para mais informações ou solucionamento de dúvidas você pode entrar em contato conosco atráves da aba <a href=\"/Contact\">Contact</a>.\r\n            </p>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Collapse, NavItem, NavLink, Card, CardBody } from \"reactstrap\";\r\nimport './Navbar__.css';\r\nimport { IoIosList } from \"react-icons/io\";\r\n\r\nexport default function SubMenu({ title, setOp, subs }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  let items = subs.map((x) => {\r\n    return (\r\n      <NavItem>\r\n        <NavLink href={x[1]}>\r\n          {x[0]}\r\n        </NavLink>\r\n      </NavItem>\r\n    );\r\n  });\r\n\r\n\r\n  return (\r\n    <div>\r\n      <NavLink href=\"#\" onClick={() => setIsOpen(!isOpen)}>\r\n        <p className=\"Navlink_p\"> <IoIosList/> {title}</p>\r\n      </NavLink>\r\n      <Collapse isOpen={isOpen}>\r\n        <Card>\r\n          <CardBody>{items}</CardBody>\r\n        </Card>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};","import React, {createContext, useState, useContext} from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default function AuthProvider({children}){\r\n    const [isLoggedIn, setIsLoggedIn] = useState();\r\n    \r\n    return (\r\n      <AuthContext.Provider value={{ isLoggedIn, setIsLoggedIn }}>\r\n        {children}\r\n      </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useAuth(){\r\n    const ctx = useContext(AuthContext);\r\n    const {isLoggedIn, setIsLoggedIn} = ctx;\r\n    return [isLoggedIn, setIsLoggedIn];\r\n}","import { Nav, NavItem, NavLink } from \"reactstrap\";\r\nimport { NavbarBrand, Button } from \"reactstrap\";\r\nimport React from \"react\";\r\nimport './Navbar__.css';\r\nimport SubMenu from \"./SubMenu.js\";\r\nimport { IoIosHome, IoIosNotifications, IoMdAt, IoIosLogIn, IoIosInformationCircleOutline, IoMdCheckmark, IoMdAttach } from \"react-icons/io\";\r\nimport AuthContext, { useAuth } from \"../../context/auth-context\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default function Navbar__(){\r\n    const Disconnect = function(){\r\n      Cookies.remove('username');\r\n      Cookies.remove('user_id');\r\n      Cookies.set('isLoggedIn', false);\r\n      Cookies.remove('token');   \r\n    }\r\n\r\n    return (\r\n      <div className=\"side_body\">\r\n        <Nav pills tabs vertical>\r\n          <NavbarBrand href=\"/\" className=\"Brand\">\r\n            <p className=\"Navbrand_p\">Projeto 2</p>\r\n          </NavbarBrand>\r\n          <NavItem>\r\n            <NavLink href=\"/\">\r\n              <p className=\"Navlink_p\">\r\n                {\" \"}\r\n                <IoIosHome /> Home\r\n              </p>\r\n            </NavLink>\r\n          </NavItem>\r\n\r\n          <NavItem>\r\n            <NavLink href=\"/about\">\r\n              <p className=\"Navlink_p\">\r\n                {\" \"}\r\n                <IoIosInformationCircleOutline /> About\r\n              </p>\r\n            </NavLink>\r\n          </NavItem>\r\n\r\n          <SubMenu title=\"Listar\" subs={submenus[0]}></SubMenu>\r\n\r\n          <NavItem>\r\n            <NavLink href=\"/relatorios\">\r\n              <p className=\"Navlink_p\">\r\n                <IoMdAttach /> Relatórios\r\n              </p>\r\n            </NavLink>\r\n          </NavItem>\r\n\r\n          <NavItem>\r\n            <NavLink href=\"/alerts\">\r\n              <p className=\"Navlink_p\">\r\n                {\" \"}\r\n                <IoIosNotifications /> Notificações\r\n              </p>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href=\"/cadastrar\">\r\n              <p className=\"Navlink_p\">\r\n                {\" \"}\r\n                <IoMdCheckmark /> Cadastrar\r\n              </p>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href=\"/login/\">\r\n              <p className=\"Navlink_p\">\r\n                {\" \"}\r\n                <IoIosLogIn /> Entrar\r\n              </p>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href=\"/Contact\">\r\n              <p className=\"Navlink_p\">\r\n                {\" \"}\r\n                <IoMdAt /> Contact\r\n              </p>\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <div className=\"User\">\r\n          <img\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\"\r\n            className=\"User_img\"\r\n          ></img>\r\n          {Cookies.get(\"username\") == \"\"\r\n            ? \"Convidado\"\r\n            : Cookies.get(\"username\")}\r\n\r\n          {Cookies.get(\"username\") != \"\" && (\r\n            <>\r\n              <br/>\r\n              <Button className=\"Button-nav-bottom\" color=\"secondary\" href=\"/paciente/dados\">\r\n                Perfil\r\n              </Button>\r\n              <Button className=\"Button-nav-bottom\" color=\"danger\" href=\"/\" onClick={Disconnect}>\r\n                Desconectar\r\n              </Button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst submenus = [\r\n  [\r\n    [\"Médicos\", \"/lista_medicos\"],\r\n    [\"Pacientes\", \"/medico/lista_pacientes\"],\r\n    [\"Sensores\", \"/lista_sensores\"],\r\n  ],\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport './Login.css';\r\nimport { Navigate } from \"react-router-dom\";\r\nimport AuthContext, { useAuth } from \"../../context/auth-context\";\r\nimport Cookies from 'js-cookie';\r\n\r\nexport default function Login(){\r\n    const [pass, setPass] = useState(''); // senha\r\n    const [user, setUser] = useState(\"\"); // usuario\r\n    const [auth, setAuth] = useAuth();\r\n    const [submissionAns, setSubmissionAns] = useState(''); // retorno do servidor sobre a tentativa de login\r\n\r\n    // na submissão, usuario e senha são enviados para o servidor e a resposta é salva no navegador como cookie, token, usuario e se esta logado\r\n    const onSubmit = () => {\r\n      const response = fetch('http://127.0.0.1:8000/api/login/', {\r\n          method: \"POST\",\r\n          body: JSON.stringify({user: user, password: pass})\r\n      });\r\n\r\n      // setSubmissionAns('failed');\r\n      setSubmissionAns('failed');\r\n      // const data = response.json();\r\n      // if(data.submissionAns == 'true'){\r\n        // setSubmissionAns(data.submissionAns);\r\n        // Cookies.set('username', data.username);\r\n        // Cookies.set('isLoggedIn', data.isLoggedIn);\r\n        // Cookies.set('token', data.token);\r\n      // }\r\n      \r\n    }\r\n\r\n    // cada letra digitada do usuario vai ser guardada no usestate\r\n    const onChangeUser = (e) => {\r\n      setUser(e.target.value);\r\n    }\r\n    \r\n    // cada letra digitada da senha vai ser guardada no usestate\r\n    const onChangePass = (e) => {\r\n      setPass(e.target.value);\r\n    }\r\n\r\n    // da um clear na mensagem no status do login\r\n    (submissionAns == 'failed' || submissionAns == 'success') && setTimeout(() => {\r\n      setSubmissionAns('a')\r\n    }, 5000)\r\n\r\n    // jsx do formulario de login\r\n    let login_form_jsx = (\r\n      <form>\r\n        <input type=\"radio\" id=\"medico\" name=\"fav_language\" value=\"medico\" />\r\n        <label for=\"medico\">Médico</label>\r\n        <br />\r\n        <input\r\n          type=\"radio\"\r\n          id=\"paciente\"\r\n          name=\"fav_language\"\r\n          value=\"paciente\"\r\n        />\r\n        <label for=\"paciente\">Paciente</label>\r\n        <br />\r\n        <label for=\"user\">Username: </label>\r\n        <br />\r\n        <input type=\"text\" id=\"user\" onChange={onChangeUser}></input>\r\n        <br />\r\n        <br />\r\n\r\n        <label for=\"pass\">Password:</label>\r\n        <br />\r\n        <input type=\"password\" id=\"pass\" onChange={onChangePass}></input>\r\n        <p>\r\n          Esqueceu a senha? <a href=\"/login/recuperar\">Clique aqui!</a>\r\n        </p>\r\n        <br />\r\n        <Button\r\n          block\r\n          color=\"success\"\r\n          outline\r\n          size=\"lg\"\r\n          onClick={onSubmit}\r\n          href=\"\"\r\n        >\r\n          Entrar\r\n        </Button>\r\n        {submissionAns == \"failed\" && (\r\n          <div className=\"message_content\">Usuário ou senha incorretos.</div>\r\n        )}\r\n        {submissionAns == \"success\" && (\r\n          <div className=\"message_content\">Conectado</div>\r\n        )}\r\n      </form>\r\n    );\r\n\r\n    return (\r\n      <div className=\"Login_container\">\r\n        <div className=\"Login\">\r\n          <div className=\"Login_content\">{login_form_jsx}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\n","import './Lista_pacientes.css';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button } from 'reactstrap';\r\nimport AuthContext, { useAuth } from \"../../context/auth-context\";\r\nimport Cookies from 'js-cookie';\r\nimport { BrowserRouter as Router,Routes, Route } from 'react-router-dom';\r\n\r\nexport default function Lista_pacientes(){\r\n\r\n  const [loaded_data, set_loaded_data] = useState({data: ''}); // lista de pacientes quando carregado do backend será guardado aqui\r\n  const [show_add_window, set_show_add_window] = useState(false); // estado verdadeiro ou falso para mostrar a janela de adicionar pacientes\r\n  const [_p_n_attached_list, set_p_n_attached_list] = useState(); // pacientes que não estão sendo monitorados\r\n  const [_s_n_attached_list, set_s_n_attached_list] = useState(); // sensores que não estão sendo monitorados\r\n  let S_attach_p; // sensor escolhido\r\n  let P_attach_s; // paciente escolhido\r\n\r\n  // carrega lista de pacientes e sensores não usados\r\n  const load_n_attached_list = async () => {\r\n    const response1 = await fetch(\"http://127.0.0.1:8000/api/p_n_attached/\");\r\n    const response2 = await fetch(\"http://127.0.0.1:8000/api/s_n_attached/\");\r\n    const data_a = await response1.json();\r\n    const data_b = await response2.json();\r\n    set_p_n_attached_list(data_a);\r\n    set_s_n_attached_list(data_b);\r\n  };\r\n  // attach, enviar sensor e paciente escolhido para o backend\r\n  const load_n_attached = async () => {\r\n    const response1 = await fetch(\"http://127.0.0.1:8000/api/home_view/\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({token: Cookies.get('token'), patient: P_attach_s, sensor: S_attach_p}),\r\n  });\r\n    const data_a = await response1.json();\r\n  };\r\n  // carrega lista\r\n  const load_data = async () => {\r\n    const response = await fetch(\"http://127.0.0.1:8000/api/json_response/\");\r\n    const data_a = await response.json();\r\n    set_loaded_data({data: data_a});\r\n  };\r\n  // dados do carregar lista devem ser periodicamente recarregados\r\n  const update_content = () => {\r\n    setInterval(()=>{\r\n      load_data();\r\n    }, 1000);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   update_content();\r\n  // }, []);\r\n\r\n  \r\n  let patient_opt = p_n_attached_list.map((x) => (\r\n    <option value={x}>{x}</option>\r\n  ));\r\n  let sensor_opt = s_n_attached_list.map((x) => (\r\n    <option value={x}>{x}</option>\r\n  ));\r\n\r\n// dos dados da lista, organizar o jsx\r\nlet linhas_lista = dados.map((x) => (\r\n  <div className=\"grid-container\">\r\n    <div className=\"item1\">{x[0]}</div>\r\n    {\r\n      x[1] == 'Nome' &&\r\n      <div className=\"item2\">\r\n        {x[1]}\r\n      </div>\r\n    }\r\n    \r\n    {\r\n      // se for linha do paciente, o nome deve ser clicável para direcionar ao historico daquele paciente\r\n      x[1] != 'Nome' &&\r\n      <div className=\"item2\">\r\n        <a href='/paciente/historico' onClick={() => {localStorage.setItem('profile_id', x[0])}}>{x[1]}</a>\r\n      </div>\r\n    }\r\n    \r\n    \r\n    {/* outros dados como temperatura, pressão, oxigenação e cardiaco */}\r\n    <div className=\"item3\">{x[2]}</div>\r\n    <div className=\"item4\">{x[3]}</div>\r\n    <div className=\"item5\">{x[4]}</div>\r\n    <div className=\"item6\">{x[5]}</div>\r\n  </div>\r\n));\r\n\r\nreturn (\r\n  <div className=\"page\">\r\n    <h1>Lista de pacientes</h1>\r\n    <div className=\"op_lista\">\r\n      {/* botão de adicionar pacientes */}\r\n      <Button\r\n        color=\"success\"\r\n        size=\"lg\"\r\n        onClick={() => {\r\n          set_show_add_window(true);\r\n          // load_n_attached_list;\r\n        }}\r\n      >\r\n        Adicionar\r\n      </Button>\r\n      {/* botão de atualizar lsita */}\r\n      <div>\r\n        <Button color=\"light\" size=\"lg\" onClick={load_data}>\r\n          Atualizar\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n    {/* Mostrar pacientes e suas informações vitais */}\r\n    <div className=\"patient_row\">{linhas_lista}</div>\r\n    {/* Se for o caso de adiconar pacientes no monitor */}\r\n    {show_add_window == true && (\r\n      <>\r\n        <div\r\n          className=\"background_add_form\"\r\n          onClick={() => set_show_add_window(!show_add_window)}\r\n        ></div>\r\n        <div className=\"add_form\">\r\n          <form>\r\n            <div>\r\n              <label for=\"item_form1\">Paciente:</label>\r\n              <select name=\"item_form1\" onChange={(e) => { P_attach_s = e.target.value }}>{(patient_opt.unshift(<option value=''>Selecionar</option>)) && patient_opt}</select>\r\n            </div>\r\n            <div>\r\n              <label for=\"item_form2\">ID do sensor:</label>\r\n              <select name=\"item_form2\" onChange={(e) => { S_attach_p = e.target.value }}>{(sensor_opt.unshift(<option value=''>Selecionar</option>)) && sensor_opt}</select>\r\n            </div>\r\n            <div className=\"Button_submit\">\r\n              <Button\r\n                className=\"Button_submit\"\r\n                color=\"primary\"\r\n                size=\"sm\"\r\n                href=\"/medico/lista_pacientes\"\r\n                onClick={load_n_attached}\r\n              >\r\n                Adicionar\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </>\r\n    )}\r\n  </div>\r\n);\r\n}\r\n\r\nvar dados = [\r\n    ['id', 'Nome', 'ºC', 'BPM', 'SaO2', 'mmHg'],\r\n    [0, 'pericles', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n    [1, 'izumi', 84, 120, 123, 456],\r\n];\r\n\r\nvar p_n_attached_list = [\r\n  '1- pericles', '2- izumi', '3- yoshigae', '4- moritani'\r\n];\r\n\r\nvar s_n_attached_list = [\r\n  1,2,3,4,5\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport './Login.css';\r\n\r\nexport default function Recovery(){\r\n    const [email, set_email] = useState('');\r\n    const [show_message, set_show_message] = useState(false);\r\n\r\n    const onSubmit = () => {\r\n        return fetch('http://127.0.0.1:8000/api/recovery/', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({email: email})\r\n        });\r\n      }\r\n\r\n    var forgot_jsx = (\r\n        <form>\r\n          <label for=\"email\">Digite seu email: </label>\r\n          <br />\r\n          <input type=\"email\" id=\"email\" onChange={(x) => set_email(x.target.value)}></input>\r\n          <br />\r\n          <br />\r\n          <Button block color=\"success\" outline size=\"lg\" type=\"submit\" onClick={() => set_show_message(!show_message)}>\r\n            Recuperar\r\n          </Button>\r\n        </form>\r\n      );\r\n\r\n      var message_jsx = (\r\n        <div className=\"message_content\">Email enviado para: {email}</div>\r\n      );\r\n\r\n      return (\r\n        <div className=\"Login_container\">\r\n          <div className=\"Login\">\r\n            <div className=\"Login_content\">{show_message == false && forgot_jsx}</div>\r\n            <div className=\"Login_content\">{show_message == true && message_jsx}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./Register.css\";\r\n\r\nexport default function Register() {\r\n  const [submissionAns, setSubmissionAns] = useState(\"\"); // retorno do servidor sobre a tentativa de cadastro\r\n\r\n  const [med_paci, set_med_paci] = useState('');\r\n  const [nome, set_nome] = useState('');\r\n  const [cpf, set_cpf] = useState('');\r\n  const [senha, set_senha] = useState('');\r\n  const [conf_senha, set_conf_senha] = useState('');\r\n  const [sexo, set_sexo] = useState('');\r\n  const [telefone, set_telefone] = useState('');\r\n  const [email, set_email] = useState('');\r\n  const [comorbidades, set_comorbidades] = useState('');\r\n  const [nome_parente, set_nome_parente] = useState('');\r\n  const [tel_parenet, set_tel_parente] = useState('');\r\n  const [email_parente, set_email_parente] = useState('');\r\n  const [cep, set_cep] = useState('');\r\n  const [endereco, set_endereco] = useState('');\r\n  const [especialidade, set_especialidade] = useState('');\r\n\r\n  // useEffect(() => {\r\n  //   console.log(med_paci);\r\n  // }, [med_paci]);\r\n\r\n\r\n  const onSubmit = () => {\r\n    fetch(\"http://127.0.0.1:8000/api/register/\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({}),\r\n    });\r\n\r\n    const response = fetch(\"http://127.0.0.1:8000/api/login/status\");\r\n    // setSubmissionAns('failed');\r\n    // const data = response.json();\r\n    // if(data.submissionAns == 'true'){\r\n    // setSubmissionAns(data.submissionAns);\r\n    // Cookies.set('username', data.username);\r\n    // Cookies.set('isLoggedIn', data.isLoggedIn);\r\n    // Cookies.set('token', data.token);\r\n    // }\r\n  };\r\n  // onChange={() => {(e.target.value)}\r\n  const jsx_patient = (\r\n    <>\r\n      <label for=\"name_emer\">Nome de um parente:</label>\r\n      <br />\r\n      <input type=\"text\" id=\"name_emer\" onChange={(e) => {set_nome_parente(e.target.value)}}></input>\r\n      <br />\r\n\r\n      <label for=\"telephone_emer\">Telefone de um parente:</label>\r\n      <br />\r\n      <input\r\n        type=\"tel\"\r\n        id=\"telephone_emer\"\r\n        pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\"\r\n        onChange={(e) => {set_tel_parente(e.target.value)}}\r\n      />\r\n      <br />\r\n\r\n      <label for=\"email_emer\">Email de um parente:</label>\r\n      <br />\r\n      <input type=\"email\" id=\"email_emer\" onChange={(e) => {set_email_parente(e.target.value)}}></input>\r\n      <br />\r\n\r\n      <label for=\"comorbidity\">Nos conte sobre suas comorbidades:</label>\r\n      <br />\r\n      <textarea id=\"comorbidity\" rows=\"4\" cols=\"24\" onChange={(e) => {set_comorbidades(e.target.value)}}></textarea>\r\n      <br />\r\n    </>\r\n  );\r\n\r\n  const jsx_doc = (\r\n    <>\r\n      <label for=\"especialidade\">Especialidade:</label>\r\n      <br />\r\n      <input type=\"text\" id=\"especialidade\" onChange={(e) => {set_especialidade(e.target.value)}}></input>\r\n      <br />\r\n    </>\r\n  );\r\n\r\n  const jsx_form = (\r\n    <>\r\n      <form>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"medico\"\r\n          name=\"fav_language\"\r\n          value=\"medico\"\r\n          onChange={(e) => set_med_paci(\"medico\")}\r\n        />\r\n        <label for=\"medico\">Médico</label>\r\n        <br />\r\n        <input\r\n          type=\"radio\"\r\n          id=\"paciente\"\r\n          name=\"fav_language\"\r\n          onChange={(e) => set_med_paci(\"paciente\")}\r\n        />\r\n        <label for=\"paciente\">Paciente</label>\r\n        <br />\r\n\r\n        <label for=\"name\">Nome:</label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={(e) => {\r\n            set_nome(e.target.value);\r\n          }}\r\n        ></input>\r\n        <br />\r\n\r\n        <label for=\"cpf\">CPF:</label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          id=\"cpf\"\r\n          onChange={(e) => {\r\n            set_cpf(e.target.value);\r\n          }}\r\n        ></input>\r\n        <br />\r\n\r\n        <label for=\"pass\">Senha:</label>\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          id=\"pass\"\r\n          onChange={(e) => {\r\n            set_senha(e.target.value);\r\n          }}\r\n        ></input>\r\n        <br />\r\n\r\n        <label for=\"pass_conf\">Confirme sua senha:</label>\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          id=\"pass_conf\"\r\n          onChange={(e) => {\r\n            set_conf_senha(e.target.value);\r\n          }}\r\n        ></input>\r\n        <br />\r\n\r\n        <label for=\"telephone\">Telefone pessoal:</label>\r\n        <br />\r\n        <input\r\n          type=\"tel\"\r\n          id=\"telephone\"\r\n          pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\"\r\n          onChange={(e) => {\r\n            set_telefone(e.target.value);\r\n          }}\r\n        />\r\n        <br />\r\n\r\n        <label for=\"email\">Email pessoal:</label>\r\n        <br />\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          onChange={(e) => {\r\n            set_email(e.target.value);\r\n          }}\r\n        ></input>\r\n        <br />\r\n\r\n        <label for=\"cep\">CEP:</label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          id=\"cep\"\r\n          onChange={(e) => {\r\n            set_cep(e.target.value);\r\n          }}\r\n        />\r\n        <br />\r\n\r\n        <label for=\"address\">Endereço:</label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          id=\"address\"\r\n          onChange={(e) => {\r\n            set_endereco(e.target.value);\r\n          }}\r\n        ></input>\r\n        <br />\r\n\r\n        {med_paci == \"paciente\" && jsx_patient}\r\n        {med_paci == \"medico\" && jsx_doc}\r\n\r\n        <label for=\"image\">Foto de perfil:</label>\r\n        <br />\r\n        <input type=\"file\" id=\"image\"></input>\r\n        <br />\r\n        <br />\r\n\r\n        <Button\r\n          block\r\n          color=\"success\"\r\n          outline\r\n          size=\"lg\"\r\n          onClick={onSubmit}\r\n          href=\"\"\r\n        >\r\n          Registrar\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"Register_container\">\r\n      <div className=\"Register\">{jsx_form}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport './Profile.css';\r\nimport Cookies from 'js-cookie';    \r\n\r\n// esse componente serve para atualizar os dados cadastrais do usuario\r\nexport default function Profile({id}){\r\n    const response = fetch('http://127.0.0.1:8000/api/profile/', {\r\n        method: \"POST\",\r\n        body: JSON.stringify({id: id, token: Cookies.get('token')})\r\n    });\r\n    // const data = response.json();\r\n\r\n    // let name = '';\r\n    // let email = '';\r\n    // let telephone = '';\r\n    // let comorbidades = '';\r\n\r\n    // try{\r\n    //     name = data.name;\r\n    // }\r\n    // catch{}\r\n    // try{\r\n    //     email = data.email;\r\n    // }\r\n    // catch{}\r\n    // try{\r\n    //     telephone = data.telephone;\r\n    // }\r\n    // catch{}\r\n    // try{\r\n    //     comorbidades = data.comorbidades;\r\n    // }\r\n    // catch{}\r\n\r\n    const onSubmit = () => {\r\n        console.log('');\r\n    }\r\n\r\n    return (\r\n      <div className=\"page-prof\">\r\n        <div className=\"body-profile\">\r\n          <div className=\"col-left-prof\">\r\n            <img\r\n              className=\"img_profile\"\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png\"\r\n            />\r\n          </div>\r\n          <div className=\"col-right-prof\">\r\n            <form>\r\n              <label for=\"name\">Nome:</label>\r\n              <br />\r\n              <input type=\"text\" id=\"name\" value={{/*name*/}}></input>\r\n              <br />\r\n\r\n              <label for=\"pass\">Senha:</label>\r\n              <br />\r\n              <input type=\"password\" id=\"pass\"></input>\r\n              <br />\r\n\r\n              <label for=\"pass_conf\">Confirme sua senha:</label>\r\n              <br />\r\n              <input type=\"password\" id=\"pass_conf\"></input>\r\n              <br />\r\n\r\n              <label for=\"email\" value={{/*email*/}}>Email:</label>\r\n              <br />\r\n              <input type=\"email\" id=\"email\"></input>\r\n              <br />\r\n\r\n              <label for=\"telephone\" value={{/*telephone*/}}>Telefone:</label>\r\n              <br />\r\n              <input\r\n                type=\"tel\"\r\n                id=\"telephone\"\r\n                pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\"\r\n              />\r\n              <br />\r\n\r\n              <label for=\"email\">Email:</label>\r\n              <br />\r\n              <input type=\"email\" id=\"email\"></input>\r\n              <br />\r\n\r\n              <label for=\"comorbidity\" value={{/*comorbidades*/}}>Comorbidades:</label>\r\n              <br />\r\n              <textarea id=\"comorbidity\" rows=\"4\" cols=\"24\"></textarea>\r\n              <br />\r\n\r\n              <label for=\"image\">Foto do perfil:</label>\r\n              <br />\r\n              <input type=\"file\" id=\"image\"></input>\r\n              <br />\r\n              <br />\r\n\r\n              <Button\r\n                block\r\n                color=\"success\"\r\n                outline\r\n                size=\"lg\"\r\n                onClick={onSubmit}\r\n                href=\"\"\r\n              >\r\n                Atualizar\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport './Historico_paciente.css';\r\nimport Cookies from 'js-cookie';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport default function Historico_paciente({id}){\r\n\r\n    const [loaded_data, set_loaded_data] = useState({data: ''}); // todo os dados vitais historicos do pacientes são carregados do servidor e guardados aqui \r\n\r\n    // para parar de monitorar o paciente, enviar dados para remoção do paciente\r\n    const remove_patient = () => {\r\n        const response = fetch('http://127.0.0.1:8000/api/paciente/historico', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({id: id, token: Cookies.get('token')})\r\n        });\r\n        const data_b = response.json();\r\n    }\r\n\r\n    // requisitar o historico dos dados para o servidor\r\n    const load_data = async() => {\r\n        const response = fetch('http://127.0.0.1:8000/api/paciente/historico', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({id: id, token: Cookies.get('token')})\r\n        });\r\n        const data_a = response.json();\r\n        set_loaded_data({data: data_a});\r\n    }\r\n\r\n    // se a pagina ficar aberta, periodicamente devemos atualizar a pagina, pois o sensor tambem faz leituras periodicas\r\n    const update_content = () => {\r\n        setInterval(()=>{\r\n            load_data();\r\n        }, 1000);\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   update_content();\r\n    // }, []);\r\n\r\n    // do historico de dados vitais, organizar para exibição\r\n    let linhas_lista = dados.map((x) => (\r\n        <div className=\"grid-container-hist\">\r\n          <div className=\"item1\">{x[0]}</div>\r\n          {\r\n            x[1] == 'Nome' &&\r\n            <div className=\"item2\">\r\n              {x[1]}\r\n            </div>\r\n          }\r\n          \r\n          {\r\n            x[1] != 'Nome' &&\r\n            <div className=\"item2\">\r\n              <div>{x[1]}</div>\r\n            </div>\r\n          }\r\n          \r\n          <div className=\"item3\">{x[2]}</div>\r\n          <div className=\"item4\">{x[3]}</div>\r\n          <div className=\"item5\">{x[4]}</div>\r\n          <div className=\"item6\">{x[5]}</div>\r\n        </div>\r\n      ));\r\n\r\n      let nome = ' -- replace -- ';\r\n      \r\n      return (\r\n        <div className=\"page-hist\">\r\n          <h1 className=\"page_header-hist\">Paciente {nome}</h1>\r\n          <div className=\"op_lista-hist\">\r\n            <Button\r\n              color=\"danger\"\r\n              size=\"lg\"\r\n              onClick={remove_patient}\r\n              href=\"/medico/lista_pacientes\"\r\n            >\r\n              Remover\r\n            </Button>\r\n            <Button color=\"dark\" size=\"lg\">\r\n              Gerar relatório\r\n            </Button>\r\n          </div>\r\n          <div className=\"patient_row-hist\">{linhas_lista}</div>\r\n        </div>\r\n      );\r\n}\r\n\r\nvar dados = [\r\n    ['data', 'hora', 'ºC', 'BPM', 'SaO2', 'mmHg'],\r\n    ['01/01/2022', '12:12:12', 84, 120, 123, 456],\r\n    ['01/01/2022', '12:12:12', 84, 120, 123, 456],\r\n    ['01/01/2022', '12:12:12', 84, 120, 123, 456],\r\n    ['01/01/2022', '12:12:12', 84, 120, 123, 456],\r\n    ['01/01/2022', '12:12:12', 84, 120, 123, 456],\r\n    ['01/01/2022', '12:12:12', 84, 120, 123, 456],\r\n    ['01/01/2022', '12:12:12', 84, 120, 123, 456],\r\n    ['01/01/2022', '12:12:12', 84, 120, 123, 456],\r\n    ['01/01/2022', '12:12:12', 84, 120, 123, 456],\r\n\r\n];\r\n","import { getDefaultNormalizer } from \"@testing-library/react\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Row, Col } from 'reactstrap';\r\nimport './Lista_medicos.css';\r\n\r\nexport default function Lista_medicos(){\r\n    const [loaded_data, set_loaded_data] = useState({data: ''}); // lista de medicos e suas informações são carregadas do servidor e guardadas aq \r\n\r\n    // requisitar ao servidor lista dos medicos e suas informações\r\n    const load_data = async () => {\r\n      const response = await fetch(\"http://127.0.0.1:8000/api/json_response/\");\r\n      const data_a = await response.json();\r\n      set_loaded_data({data: data_a});\r\n    };\r\n    \r\n  let linhas_lista = dados.map((x) => (\r\n    <div className=\"grid-container-l_medicos\">\r\n      <div className=\"item\">\r\n        <img\r\n          className=\"img_profile\"\r\n          src=\"https://www.seekpng.com/png/detail/966-9665317_placeholder-image-person-jpg.png\"\r\n        />\r\n      </div>\r\n      <div className=\"item\">{x[1]}</div>\r\n      <div className=\"item\">{x[2]}</div>\r\n\r\n      <div className=\"item\">{x[3]}</div>\r\n      <div className=\"button_l\">\r\n        <Button color=\"primary\" size=\"sm\">\r\n          Info\r\n        </Button>\r\n        <Button color=\"danger\" size=\"sm\">\r\n          Remov\r\n        </Button>\r\n        <Button color=\"success\" size=\"sm\">\r\n          Pacientes\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  ));\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"page-l_medicos\">\r\n      <h1>Lista de médicos</h1>\r\n        <div className=\"patient_row-l_medicos\">{linhas_lista}</div>\r\n      </div>\r\n    </>\r\n  );\r\n  }\r\n  \r\n  var dados = [\r\n      [123, 'Dr. pericles', 'pericles@gmail.com', '+55 12 99999-1111'],\r\n      [123, 'Dr. pericles', 'pericles@gmail.com', '+55 12 99999-1111'],\r\n      [123, 'Dr. pericles', 'pericles@gmail.com', '+55 12 99999-1111'],\r\n      [123, 'Dr. pericles', 'pericles@gmail.com', '+55 12 99999-1111'],\r\n      [123, 'Dr. pericles', 'pericles@gmail.com', '+55 12 99999-1111'],\r\n      [123, 'Dr. pericles', 'pericles@gmail.com', '+55 12 99999-1111'],\r\n      [123, 'Dr. pericles', 'pericles@gmail.com', '+55 12 99999-1111'],\r\n      [123, 'Dr. pericles', 'pericles@gmail.com', '+55 12 99999-1111'],\r\n\r\n  ];\r\n  ","import React, { useState } from \"react\";\r\nimport './Lista_sensores.css';\r\nimport { Button, Row, Col } from 'reactstrap';\r\nimport { isDisabled } from \"@testing-library/user-event/dist/utils\";\r\nimport Cookies from 'js-cookie';\r\n\r\nexport default function Lista_sensores() {\r\n  const [loaded_data, set_loaded_data] = useState({ data: \"\" }); // dados que são carregados do backend, lista de pessoas, pacientes e sensores são guardados aqui\r\n  const [show_change_sensor, set_show_change_sensor] = useState(false); // um botão para tupla (paciente, medico, sensor), mostrar ou não a janela para trocar de sensor do paciente\r\n  const [med_change_sensor, set_med_change_sensor] = useState(-1); // ao clicar no botao para mudar o sensor, fica registrado o id do médico e paciente envolvidos\r\n  const [patient_change_sensor, set_patient_change_sensor] = useState(-1);\r\n  let new_sensor = -1; // id do novo sensor\r\n  \r\n  const [show_add_sensor, set_show_add_sensor] = useState(false); // mostrar a janela de adicionar um sensor\r\n  const [add_sensor_id, set_add_sensor_id] = useState(''); // id do novo sensor\r\n  const [add_sensor_port, set_add_sensor_port] = useState(''); // porta que o novo sensor vai se conectar\r\n\r\n  //carrega a tupla do backend\r\n  const load_data = async () => {\r\n    const response = await fetch(\"http://127.0.0.1:8000/api/json_response/\");\r\n    const data_a = await response.json();\r\n    set_loaded_data({ data: data_a });\r\n  };\r\n\r\n  //enviar a escolha do novo sensor\r\n  const update_sensor = async () => {\r\n    const response = await fetch(\"http://127.0.0.1:8000/api/home_view/\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({token: Cookies.get('token'), new_sensor: new_sensor, doctor: med_change_sensor, patient: patient_change_sensor})\r\n    });\r\n    const data_a = await response.json();\r\n  };\r\n\r\n  //enviar dados do novo sensor\r\n  const add_sensor = async () => {\r\n    const response = await fetch(\"http://127.0.0.1:8000/api/home_view/\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({token: Cookies.get('token'), new_sensor_id: add_sensor_id, new_sensor_port: add_sensor_port})\r\n    });\r\n    const data_a = await response.json();\r\n  };\r\n\r\n  //informações da tupla são carregadas em linhas para serem exibidas\r\n  let linhas_lista = dados.map((x) => (\r\n    <div className=\"grid-container-l_sensores\">\r\n      <div className=\"item\">{x[0]}</div>\r\n      <div className=\"item\">{x[1]}</div>\r\n      <div className=\"item\">{x[2]}</div>\r\n\r\n      <div className=\"item\">{x[3]}</div>\r\n      <div className=\"item\">{x[4]}</div>\r\n\r\n      <div className=\"button\">\r\n        {x[0] != \"ID médico\" && (\r\n          <Button\r\n            color=\"warning\"\r\n            size=\"sm\"\r\n            disabled={show_change_sensor}\r\n            onClick={() => {\r\n              set_show_change_sensor(true);\r\n              set_med_change_sensor(x[0])\r\n              set_patient_change_sensor(x[2])\r\n            }}\r\n          >\r\n            ✗\r\n          </Button>\r\n        )}\r\n        {x[0] == \"ID médico\" && \"Trocar sensor\"}\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  //mostrar opções de sensores disponíveis\r\n  let sensor_form = sensor.map((x) => (\r\n    <option value={x}>{x}</option>\r\n  ));\r\n\r\n  // aqui é a janela para mudar de sensor\r\n  let change_sensor_jsx = (\r\n    <>\r\n      <div\r\n        className=\"background_window\"\r\n        onClick={() => set_show_change_sensor(!show_change_sensor)}\r\n      ></div>\r\n      <div className=\"window_body\">\r\n        <form>\r\n          <label for=\"sensor_form\">Novo ID do sensor:</label>\r\n          <select\r\n            name=\"sensor_form\"\r\n            onChange={(e) => {\r\n              new_sensor = e.target.value;\r\n            }}\r\n          >\r\n            {sensor_form.unshift(<option value=\"\">Selecionar</option>) &&\r\n              sensor_form}\r\n          </select>\r\n          <Button\r\n            className=\"Button_submit\"\r\n            color=\"warning\"\r\n            size=\"sm\"\r\n            href=\"/lista_sensores\"\r\n            onClick={update_sensor}\r\n          >\r\n            Escolher\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  // janela para adicionar um sensor\r\n  let add_sensor_jsx = (\r\n    <>\r\n      <div\r\n        className=\"background_window\"\r\n        onClick={() => set_show_add_sensor(false)}\r\n      ></div>\r\n      <div className=\"window_body_add_form\">\r\n        <form>\r\n          <div className=\"div1\">\r\n            <label for=\"sensor_id\">ID do sensor:</label>\r\n            <input id=\"sensor_id\" type=\"text\" onChange={(e) => set_add_sensor_id(e.target.value)}></input>\r\n            <br />\r\n          </div>\r\n          <div className=\"div1\">\r\n            <label for=\"porta\">Porta do sensor:</label>\r\n            <input id=\"porta\" type=\"text\" onChange={(e) => set_add_sensor_port(e.target.value)}></input>\r\n            <br />\r\n          </div>\r\n\r\n          <div className=\"div2\">\r\n            <Button\r\n              className=\"Button_submit\"\r\n              color=\"warning\"\r\n              size=\"sm\"\r\n              href=\"/lista_sensores\"\r\n              onClick={add_sensor}\r\n            >\r\n              Adicionar\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"page-l_sensores\">\r\n      <h1>Lista de sensores</h1>\r\n\r\n      <div className=\"op_lista-l_sensores\">\r\n        {/* botão de adicionar pacientes */}\r\n        <Button\r\n          color=\"success\"\r\n          size=\"lg\"\r\n          onClick={() => {\r\n            set_show_add_sensor(true);\r\n            // load_n_attached_list;\r\n          }}\r\n        >\r\n          Adicionar\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"patient_row-l_sensores\">{linhas_lista}</div>\r\n      {/* mostrar a janela de trocar o sensor */}\r\n      {show_change_sensor == true && change_sensor_jsx}\r\n      {/* mostrar a janela de adicionar o sensor */}\r\n      {show_add_sensor == true && add_sensor_jsx}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n//ids teste do sensores\r\nvar sensor = [\r\n    1,2,3,4,9999\r\n];\r\n\r\n//dados de teste\r\n//quando essa matriz for excluida, trocar o nome para 'loaded_data'\r\nvar dados = [\r\n  [\"ID médico\", \"Nome médico\", \"ID paciente\", \"Nome paciente\", \"ID sensor\"],\r\n  [122, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [123, \"Dr. pericles\", 456, \"pericles\", 789],\r\n  [124, \"Dr. pericles\", 456, \"pericles\", 789],\r\n];\r\n  ","import React from \"react\";\r\nimport './Reports.css';\r\n\r\nexport default function Reports(){\r\n    let linhas_lista = dados.map((x) => (\r\n      <div className=\"grid-container-reports\">\r\n        <div className=\"item1\">{x[0]}</div>\r\n        <div className=\"item2\">{x[1]}</div>\r\n        <div className=\"item3\">{x[2]}</div>\r\n        {x[0] == \"Data\" && <div className=\"item2\">{x[3]}</div>}\r\n\r\n        {x[0] != \"Data\" && (\r\n          <div className=\"item2\">\r\n            <a href={x[3]}>\r\n              <img\r\n                className=\"download-report\"\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT7ho9v4mOvANNfJtne-kW1J_PaNMgit1eQYl7j1uxdJBjKvdVQSGmlt_3fgbWIHWbwiCc&usqp=CAU\"\r\n              ></img>\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"Reports_body\">\r\n        <h2>Relatórios</h2>\r\n        <div className=\"report-list\">\r\n          <div>{linhas_lista}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nvar dados = [\r\n    ['Data', 'Hora', 'Médico', 'Download'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n    ['01/01/2022', '12:12:12', 'Dr. 1', '/'],\r\n];\r\n","import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./Alerts.css\";\r\n\r\nexport default function Alerts() {\r\n    return (\r\n      <div className=\"alerts_container\">\r\n          <div className=\"alerts_text\">\r\n            <p>\r\n                <h1><strong>Notificações</strong></h1>\r\n            \r\n            </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }","import React, { useState } from \"react\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nimport './Teste1.css';\r\n\r\nexport default function Teste1(){\r\n    return (\r\n      <Container className=\"aaa\">\r\n        <Row>\r\n          <Col className=\"bg-light border\">.col</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"bg-light border\">.col</Col>\r\n          <Col className=\"bg-light border\">.col</Col>\r\n          <Col className=\"bg-light border\">.col</Col>\r\n          <Col className=\"bg-light border\">.col</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"bg-light border\" xs=\"3\">\r\n            .col-3\r\n          </Col>\r\n          <Col className=\"bg-light border\" xs=\"auto\">\r\n            .col-auto - variable width content\r\n          </Col>\r\n          <Col className=\"bg-light border\" xs=\"3\">\r\n            .col-3\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"bg-light border\" xs=\"6\">\r\n            .col-6\r\n          </Col>\r\n          <Col className=\"bg-light border\" xs=\"6\">\r\n            .col-6\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"bg-light border\" sm=\"4\" xs=\"6\">\r\n            .col-6 .col-sm-4\r\n          </Col>\r\n          <Col className=\"bg-light border\" sm=\"4\" xs=\"6\">\r\n            .col-6 .col-sm-4\r\n          </Col>\r\n          <Col className=\"bg-light border\" sm=\"4\">\r\n            .col-sm-4\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col\r\n            className=\"bg-light border\"\r\n            sm={{\r\n              offset: 1,\r\n              order: 2,\r\n              size: 6,\r\n            }}\r\n          >\r\n            .col-sm-6 .order-sm-2 .offset-sm-1\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col\r\n            className=\"bg-light border\"\r\n            md={{\r\n              offset: 3,\r\n              size: 6,\r\n            }}\r\n            sm=\"12\"\r\n          >\r\n            .col-sm-12 .col-md-6 .offset-md-3\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col\r\n            className=\"bg-light border\"\r\n            sm={{\r\n              offset: 1,\r\n              size: \"auto\",\r\n            }}\r\n          >\r\n            .col-sm-auto .offset-sm-1\r\n          </Col>\r\n          <Col\r\n            className=\"bg-light border\"\r\n            sm={{\r\n              offset: 1,\r\n              size: \"auto\",\r\n            }}\r\n          >\r\n            .col-sm-auto .offset-sm-1\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from 'reactstrap';\r\n\r\nexport default function Teste_fetch(){\r\n    const [daata, setData] = useState('');\r\n    let print = '';\r\n\r\n    const load_data = async() =>{\r\n        const response = await fetch('http://127.0.0.1:8000/api/json_response/', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({})\r\n        });\r\n        const data = await response.json();   \r\n        setData(data);\r\n        // console.log(data.json());\r\n    }\r\n\r\n    \r\n    const update_content = () => {\r\n        setInterval(()=>{\r\n            load_data();\r\n        }, 1000);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        update_content();\r\n    }, []);\r\n\r\n    print = daata['foo'];\r\n\r\n    return (\r\n      <div>\r\n        {print}\r\n      </div>\r\n      // <div>{data}</div>\r\n      // <div>{response}</div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./Contact.css\";\r\n\r\nexport default function Contact() {\r\n  return (\r\n    <div className=\"Contact_container\">\r\n        <div className=\"Contact_text\">\r\n            <p>\r\n                <h2><strong>Contato dos Desenvolvedores</strong></h2>\r\n                Bruno Maciel Rotondaro - email: \r\n                <h5></h5>\r\n                Guilherme Aguiar Christ - email: g.christ@unifesp.br\r\n                <h5></h5>\r\n                Pedro Alexandre Afiune Magalhães - email:\r\n                <h5></h5>\r\n                Pericles Izumi Yoshigae Moritani - email: \r\n                <h5></h5>\r\n                Lucas de Jesus Moreira dos Santos - email: \r\n            \r\n            </p>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport Home from './components/home/home';\r\nimport About from './components/About/About';\r\nimport Navbar__ from './components/Navbar/Navbar__';\r\nimport Login from './components/Login/Login';\r\nimport Lista_pacientes from './components/lista_pacientes/Lista_pacientes';\r\nimport { BrowserRouter as Router,Routes, Route } from 'react-router-dom';\r\nimport Recovery from \"./components/Login/Recovery\";\r\nimport Register from \"./components/Register/Register\";\r\nimport AuthProvider from \"./context/auth-context\";\r\nimport AuthContext, { useAuth } from \"./context/auth-context\";\r\nimport Cookies from 'js-cookie';\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Historico_paciente from \"./components/lista_pacientes/Historico_paciente\";\r\nimport Lista_medicos from \"./components/Lista_medicos/Lista_medicos\";\r\nimport Lista_sensores from \"./components/Lista_sensores/Lista_sensores\";\r\nimport Reports from \"./components/Relatorios/Reports\";\r\nimport Alerts from \"./components/Alerts/Alerts\";\r\nimport './styles.css';\r\n\r\nimport Teste1 from \"./components/Teste/Teste1\";\r\nimport Teste_fetch from \"./components/Teste/Teste_fetch\";\r\nimport Contact from \"./components/Contact/Contact\";\r\n\r\nexport default function App() {\r\n\r\n  if(Cookies.get('username') == undefined){\r\n    Cookies.set('username', 'Teste');\r\n    Cookies.set('user_id', '');\r\n    Cookies.set('isLoggedIn', false);\r\n    Cookies.set('token', '');\r\n  }\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <div className=\"body\">\r\n        <Router>\r\n          <Routes>\r\n            <Route path=\"/\" element={[<Home />, <Navbar__ />]}></Route>\r\n            <Route path=\"/about\" element={[<About />, <Navbar__ />]}></Route>\r\n            <Route path=\"/login\" element={[<Login />, <Navbar__ />]}></Route>\r\n            <Route\r\n              path=\"/login/recuperar\"\r\n              element={[<Recovery />, <Navbar__ />]}\r\n            ></Route>\r\n            <Route\r\n              path=\"/medico/lista_pacientes\"\r\n              element={[<Lista_pacientes />, <Navbar__ />]}\r\n            ></Route>\r\n            <Route\r\n              path=\"/cadastrar\"\r\n              element={[<Register />, <Navbar__ />]}\r\n            ></Route>\r\n            <Route\r\n              path=\"/paciente/dados\"\r\n              element={[\r\n                <Profile id={localStorage.getItem(\"profile_id\")} />,\r\n                <Navbar__ />,\r\n              ]}\r\n            ></Route>\r\n            <Route\r\n              path=\"/paciente/historico\"\r\n              element={[\r\n                <Historico_paciente id={localStorage.getItem(\"profile_id\")} />,\r\n                <Navbar__ />,\r\n              ]}\r\n            ></Route>\r\n            <Route\r\n              path=\"/lista_medicos\"\r\n              element={[\r\n                <Lista_medicos />,\r\n                <Navbar__ />,\r\n              ]}\r\n            ></Route>\r\n            <Route\r\n              path=\"/lista_sensores\"\r\n              element={[\r\n                <Lista_sensores />,\r\n                <Navbar__ />,\r\n              ]}\r\n            ></Route>\r\n            <Route\r\n              path=\"/relatorios\"\r\n              element={[\r\n                <Reports />,\r\n                <Navbar__ />,\r\n              ]}\r\n            ></Route>\r\n            <Route path=\"/alerts\" element={[<Alerts />, <Navbar__ />]}></Route>\r\n            <Route path=\"/Contact\" element={[<Contact />, <Navbar__ />]}></Route>\r\n            <Route path=\"/teste1\" element={[<Teste1 />]}></Route>\r\n            <Route path=\"/teste\" element={[<Teste_fetch />]}></Route>\r\n          </Routes>\r\n        </Router>\r\n      </div>\r\n    </AuthProvider>\r\n  );\r\n\r\n      \r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}